@inject Manager manager
@inject LoginInformation LoginInfo

<select @onchange="OnSelectionChanged" class="form-select">
    <option disabled selected value>-- Select an option --</option>
    @foreach (var option in Options)
    {
        <option value="@option" selected="@(_selected == option)">
            @option
        </option>
    }
</select>

@code {
    [Parameter]
    public EventCallback<string> OnProjectChange { get; set; }

    [Parameter]
    public bool ActiveOnly { get; set; } = false;

    private string _selected = "General";

    private List<string> Options = new();

    protected override async Task OnInitializedAsync()
    {
        if (ActiveOnly)
        {
            Options = manager.ProjectDB.GetAllActiveProjectNamesAsync().Result;
        }
        else
        {
            Options = manager.ProjectDB.GetAllProjectNamesAsync().Result;
        }
        Project CurrentProject = await Helpers.GetCurrentProject(manager, LoginInfo);
        _selected = ProjectDataAccess.CompileProjectName(CurrentProject);
    }

    private async void OnSelectionChanged(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            _selected = e.Value.ToString();
            string projectName = _selected.Split(" | ").Last();
            await manager.ProjectDB.SelectProjectFromName(projectName, LoginInfo);

            await OnProjectChange.InvokeAsync(projectName);
        }
    }
}
